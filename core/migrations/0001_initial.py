# Generated by Django 5.1.4 on 2025-01-26 13:31

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255)),
                ('phone_number', models.CharField(max_length=20)),
                ('address', models.JSONField(blank=True, null=True)),
                ('contact', models.JSONField(blank=True, null=True)),
                ('percentage', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('description', models.TextField(blank=True, null=True)),
                ('type', models.CharField(choices=[('insurance', 'Insurance'), ('pharmacy', 'Pharmacy'), ('hospital', 'Hospital'), ('conventioned', 'Conventioned'), ('other', 'Other')], max_length=20)),
                ('email_address', models.EmailField(max_length=254)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Consultation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.CharField(blank=True, max_length=10, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10, null=True)),
                ('symptoms', models.TextField(blank=True, null=True)),
                ('diagnosis', models.TextField(blank=True, null=True)),
                ('consultation_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Scheduled', 'Scheduled'), ('Completed', 'Completed'), ('Cancelled', 'Cancelled')], default='Scheduled', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-consultation_date'],
            },
        ),
        migrations.CreateModel(
            name='ConsultationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('in_person', 'Consultation en présentiel'), ('teleconsultation', 'Consultation à distance (téléconsultation)'), ('emergency', "Consultation d'urgence"), ('follow_up', 'Consultation de suivi'), ('preventive', 'Consultation préventive (bilan de santé)'), ('specialized', 'Consultation spécialisée'), ('diagnostic', 'Consultation de diagnostic'), ('prenatal', 'Consultation prénatale'), ('postnatal', 'Consultation postnatale'), ('pediatric', 'Consultation pédiatrique'), ('geriatric', 'Consultation gériatrique'), ('screening', 'Consultation de dépistage'), ('vaccination', 'Consultation de vaccination'), ('therapeutic_education', "Consultation d'éducation thérapeutique"), ('preoperative', 'Consultation préopératoire'), ('postoperative', 'Consultation postopératoire'), ('rehabilitation', 'Consultation de réadaptation'), ('psychological', 'Consultation psychologique ou psychiatrique'), ('dietetic', 'Consultation diététique ou nutritionnelle'), ('occupational_health', 'Consultation de médecine du travail')], max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('care_type', models.TextField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('reference', models.CharField(blank=True, editable=False, max_length=255, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ExamenType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Radiography', 'Radiography'), ('Blood Test', 'Blood Test'), ('Ultrasound', 'Ultrasound'), ('MRI', 'MRI'), ('CT Scan', 'CT Scan'), ('ECG', 'ECG'), ('Lung Function Test', 'Lung Function Test'), ('Skin Biopsy', 'Skin Biopsy'), ('Eye Examination', 'Eye Examination'), ('Blood Pressure Test', 'Blood Pressure Test'), ('X-Ray', 'X-Ray'), ('Blood Sugar Test', 'Blood Sugar Test'), ('Liver Function Test', 'Liver Function Test'), ('PCR Test', 'PCR Test')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logos/')),
                ('address', models.TextField()),
                ('country', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Specialty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('general_medicine', 'Médecine générale'), ('pediatrics', 'Pédiatrie'), ('cardiology', 'Cardiologie'), ('neurology', 'Neurologie'), ('dermatology', 'Dermatologie'), ('psychiatry', 'Psychiatrie'), ('gynecology', 'Gynécologie-obstétrique'), ('orthopedics', 'Orthopédie'), ('ophthalmology', 'Ophtalmologie'), ('ent', 'Oto-rhino-laryngologie (ORL)'), ('general_surgery', 'Chirurgie générale'), ('plastic_surgery', 'Chirurgie plastique et reconstructrice'), ('cardiovascular_surgery', 'Chirurgie cardiovasculaire'), ('pediatric_surgery', 'Chirurgie pédiatrique'), ('thoracic_surgery', 'Chirurgie thoracique'), ('gastroenterology', 'Gastro-entérologie'), ('endocrinology', 'Endocrinologie et diabétologie'), ('nephrology', 'Néphrologie'), ('urology', 'Urologie'), ('hematology', 'Hématologie'), ('oncology', 'Oncologie'), ('rheumatology', 'Rhumatologie'), ('radiology', 'Radiologie'), ('emergency_medicine', "Médecine d'urgence"), ('internal_medicine', 'Médecine interne'), ('anesthesiology', 'Anesthésie et réanimation'), ('allergology', 'Allergologie'), ('infectiology', 'Infectiologie'), ('sports_medicine', 'Médecine du sport'), ('rehabilitation', 'Médecine physique et de réadaptation'), ('public_health', 'Santé publique et médecine sociale'), ('geriatrics', 'Gériatrie'), ('clinical_immunology', 'Immunologie clinique')], max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ConsultationDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('consultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='details', to='core.consultation')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='details', to='core.consultationtype')),
            ],
        ),
        migrations.AddField(
            model_name='consultation',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='consultations', to='core.consultationtype'),
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10, null=True)),
                ('order_number', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('reference', models.CharField(blank=True, editable=False, max_length=255, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.department')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='consultation',
            name='doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultations', to='core.doctor'),
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('middle_name', models.CharField(blank=True, max_length=255, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10, null=True)),
                ('email_address', models.EmailField(blank=True, max_length=254, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('role', models.CharField(choices=[('doctor', 'Doctor'), ('receptionist', 'Receptionist'), ('pharmacist', 'Pharmacist'), ('nurse', 'Nurse'), ('accountant', 'Accountant'), ('seller', 'Seller')], max_length=20)),
                ('reference', models.CharField(blank=True, editable=False, max_length=255, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Examen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_date', models.DateField(blank=True, null=True)),
                ('result', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed')], default='pending', max_length=50)),
                ('consultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='examens', to='core.consultation')),
                ('laborantin', models.ForeignKey(limit_choices_to={'is_laborantin': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='examens', to=settings.AUTH_USER_MODEL)),
                ('exam_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='examens', to='core.examentype')),
            ],
            options={
                'verbose_name': 'Analyse de laboratoire',
                'verbose_name_plural': 'Analyses de laboratoire',
                'ordering': ['-exam_date'],
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('json_data', models.TextField(blank=True, null=True)),
                ('reference', models.CharField(blank=True, max_length=255, null=True)),
                ('has_insurance', models.BooleanField(default=False)),
                ('is_conventioned', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('marital_status', models.CharField(blank=True, max_length=255, null=True)),
                ('occupation', models.CharField(blank=True, max_length=255, null=True)),
                ('nationalities', models.CharField(blank=True, max_length=255, null=True)),
                ('relative_name', models.CharField(blank=True, max_length=255, null=True)),
                ('relative_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('relative_mobile', models.CharField(blank=True, max_length=20, null=True)),
                ('relative_same_address', models.BooleanField(default=False)),
                ('conventioned_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conventioned_patients', to='core.company')),
                ('insurance_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='insured_patients', to='core.company')),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.AddField(
            model_name='consultation',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultations', to='core.patient'),
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medication', models.CharField(blank=True, max_length=100, null=True)),
                ('dosage', models.CharField(blank=True, max_length=100, null=True)),
                ('duration', models.CharField(blank=True, max_length=50, null=True)),
                ('consultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.consultation')),
            ],
        ),
        migrations.AddField(
            model_name='consultation',
            name='specialty',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='consultations', to='core.specialty'),
        ),
        migrations.CreateModel(
            name='TestResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_category', models.CharField(choices=[('Blood Tests', 'Blood Tests'), ('Urine Tests', 'Urine Tests'), ('Imaging Tests', 'Imaging Tests'), ('Cardiovascular Tests', 'Cardiovascular Tests'), ('Respiratory Tests', 'Respiratory Tests'), ('Infectious Tests', 'Infectious Tests'), ('Endocrine Tests', 'Endocrine Tests'), ('Genetic Tests', 'Genetic Tests'), ('Allergy Tests', 'Allergy Tests'), ('Coagulation Tests', 'Coagulation Tests'), ('Gastrointestinal Tests', 'Gastrointestinal Tests'), ('Other', 'Other')], default='Other', max_length=50)),
                ('test_name', models.CharField(max_length=255)),
                ('result_value', models.CharField(blank=True, max_length=255, null=True)),
                ('normal_range', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateField(auto_now_add=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('consultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_results', to='core.consultation')),
            ],
        ),
        migrations.CreateModel(
            name='VitalSigns',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Température (°C)')),
                ('blood_pressure_systolic', models.IntegerField(blank=True, null=True, verbose_name='Pression artérielle (systolique)')),
                ('blood_pressure_diastolic', models.IntegerField(blank=True, null=True, verbose_name='Pression artérielle (diastolique)')),
                ('pulse', models.IntegerField(blank=True, null=True, verbose_name='Pouls (bpm)')),
                ('respiratory_rate', models.IntegerField(blank=True, null=True, verbose_name='Fréquence respiratoire (resp/min)')),
                ('oxygen_saturation', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Saturation en O2 (%)')),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Poids (kg)')),
                ('height', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Taille (cm)')),
                ('recorded_at', models.DateTimeField(auto_now_add=True, verbose_name='Enregistré le')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vital_signs', to='core.patient', verbose_name='Patient')),
            ],
            options={
                'verbose_name': 'Signes vitaux',
                'verbose_name_plural': 'Signes vitaux',
            },
        ),
    ]
